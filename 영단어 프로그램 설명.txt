2019142010 도재우

프로그래밍 응용 과제 - 영단어 프로그램

□ 구조 

 - 프레임 구조를 활용한 것을 기준으로 한다.
 - 위치 선정은 grid로 통일

 △ homeFrame 
     기본적으로 영단어 프로그램을 제목으로 하고 로그인 구현을 위해 ID, PW를 입력받을 수 있도록 하며 로그인과 회원가입 버튼 구현
     초기화면인 동시에 회원가입 후 이동하는 프레임, 시험을 완료하고 홈으로 이동 버튼에 의해서 이동하는 프레임, 로그아웃 함수에 의해서 이동하는 프레임이다.

 △ registerFrame 
     회원가입이 완료되면 homeFrame으로 이동
     ID와 PW를 입력받아 user_info 딕셔너리에 각각 key와 value로 저장
 
 △ mainFrame
    로그인 성공시 이동하는 프레임
    시험 시작 버튼이 구현되어있다.
    미구현 → 사용자 랭킹

 △ settingFrame
    시험 시작 버튼 클릭 시 open_frame을 통해 이동하는 프레임
    한영, 영한 설정 가능 
    문제 갯수 설정 가능
    미구현 → 시험지 형식 설정 가능 (퀴즈 형식, 시험지 형식)

 △ testFrame
     시험지에 하나의 문제씩 출력, entry값을 받아 제출하고 나면 결과를 출력하고 다음문제로 넘어간다.

 △ resultQFrame
    시험 종료 시 이동하는 프레임
    시험 문제 중 내가 맞은 갯수, 내 점수를 출력
    홈으로 이동 버튼과 내 결과 저장 버튼이 구현
    내 결과 저장 버튼 클릭 시 나의 아이디, 내 최고 점수, 내 기록이 저장되어 있는 csv형식 파일 생성
    
 - py 실행 시 바로 .txt , .csv 형식의 파일 중 하나를 받는다. -> filetypes 사용
 - os 모듈을 import 하여 경로(root)와 파일의 확장자명(extesion)을 나눈다 -> os.path.splitext
 - 만약 .csv 형식이면 [공통] 파일의 오른쪽 공백 제거 후, [csv] 쉼표를 기준으로 영어와 한글을 나누어 각각 word 딕셔너리의 key와 value에 대입한다.
 - 만약 .txt 형식이면 [공통] 파일의 오른쪽 공백 제거 후, [txt] 공백(space)을 기준으로 영어와 한글을 나누어 각각 word 딕셔너리의 key와 value에 대입한다.
 - 두 경우다 아니면 (파일은 csv, txt 만 받을 수 있으므로 강제종료가 이에 해당) window 강제종료 후 경고 출력
 - 생성된 딕셔너리를 영한사전으로 취급, 한영사전 또한 생성 해준다 -> eng_kor_dict
 - 딕셔너리의 keys를 영어 리스트로 나열, values를 한글 리스트로 나열

 - open_frame()을 통해 homeFrame이 우선적으로 위에 오도록 한다

☆ 추가 기능
 △ 로그인, 회원가입 (ID중복체크 가능)
     가장 구현이 힘들었던 함수지만 처음부터 로그인 구현에 매진해서 어느정도는 흉내는 내었다.
    
     우선 registerFrame에서 회원가입 시 ID를 입력하고 PW를 입력하는데 이때 ID 중복체크가 되지 않았으면, messagebox 경고 출력
     ID가 입력되지않았으면 ID 확인 경고 출력
     PW가 입력되지않았으면 PW 확인 경고 출력
     둘 다 입력되지 않았으면 로그인 정보 확인 경고 출력
     입력되었지만 이전에 ID 중복체크를 했던 ID와 다르면 경고 출력
     이외 회원가입 성공 알림 출력
     
    로그인 시 PW가 존재하는데 ID가 매치되지 않으면 ID 확인 경고 출력
    ID가 존재하는데 PW가 매치되지 않으면 PW 확인 경고 출력 
   
    또한 로그아웃이 가능한데, 시험 중에는 로그인이 불가하다. 이는 testING변수를 이용하여 구현

 △ Combobox 활용 단어 갯수 선택 가능
     items로 초기화된 리스트 원소들을 settingFrame에서 단어 갯수로 설정할 수 있도록 한다.

 △ randum 모듈 활용 랜덤 배열	
     test 함수 호출 시 settingFrame에서 설정하였던 단어 갯수를 randnum으로 저장하고, sample함수를 이용하여 사전의 english갯수(=korean갯수 = 영한 쌍의 갯수)의 범위
     에서 randnum만큼의 무작위 정수를 뽑는다.
     radumWord는 리스트형이므로 index를 이용하여 원소에 접근, 일전에 선언하였던 영어 리스트와 한글 리스트에서 랜덤한 index로 원소를 뽑아온다.    

 △ 메뉴 활용 개발자 관련 함수 및 내 정보 출력
     사이트로 이동할 수 있는 기능이 있었으면 좋겠다 라고 생각하여 webbrowser 모듈을 import 하였다.
     이를 통해 '개발자 사이트' 버튼으로 개발자 블로그에 접근이 가능하고, 개발자에게 후원하기는 토스 사이트로 이동하게 된다.
     
 △ Radiobutton 활용 한영, 영한 설정 가능
     한영사전, 영한사전을 따로 설정하여 구현
     settingFrame에서 Radiobutton을 활용하여 함수에서 영한모드, 한영모드를 구분한다.
     Radiobutton을 사용한 이유는 직관적으로 알아보기 쉽고 둘 중 하나만 선택가능 하기 때문
    
 △ messagebox 활용 다양한 알림 추가
    시험 중인데 로그아웃을 하려던가, ID창을 비워두고 회원가입을 시도한다던가의 경우에서 messagebox를 이용하여 경고를 출력하고
    회원가입 성공, 로그인 성공 등은 알림을 출력한다.
    이를 이용하여 나의 정보도 확인 가능하다.
 